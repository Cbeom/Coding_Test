//카카오 프렌즈 컬러링북
//재귀함수를 이용하여 해결
class Solution {
    static int numberOfArea;
    static int maxSizeOfOneArea;
    static int temp=0;
    
    static int[] dx={-1,1,0,0};
    static int[] dy={0,0,-1,1};
    
    public int[] solution(int m, int n, int[][] pic) {
        boolean[][] vis=new boolean[m][n];
        numberOfArea =0;
        maxSizeOfOneArea=0;
        int[] answer = new int[2];
        answer[0] = numberOfArea;
        answer[1] = maxSizeOfOneArea;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(pic[i][j]!=0 && !vis[i][j]){
                    numberOfArea++;
                    dfs(i,j,pic,vis);
                }
                if(temp>maxSizeOfOneArea) maxSizeOfOneArea=temp;
                temp=0;
            }
        }
        answer[0] = numberOfArea;
        answer[1] = maxSizeOfOneArea;
        return answer;
    }
    public static void dfs(int x,int y, int[][] pic,boolean [][] vis){
        if(vis[x][y]) return;
        vis[x][y]=true;
        temp++;
        for(int i=0;i<4;i++){
            int nx=x+dx[i];
            int ny=y+dy[i];
            if(nx<0 || nx>=pic.length || ny<0 || ny>=pic[0].length) continue;
            if(pic[x][y]==pic[nx][ny] && !vis[nx][ny]){
                dfs(nx,ny,pic,vis);
            }
        }
    }
}