//단체사진 찍기
class Solution {
    int answer=0;
    final String[] member = {"A", "C", "F", "J", "M", "N", "R", "T"};
    public int solution(int n, String[] data) {
        boolean[] visit=new boolean[member.length];
        dfs("",visit,data);
        
        return answer;
    }
    void dfs(String names,boolean[] visit,String[] datas) {
        if(names.length()==7){
            if(check(names,datas)){
                answer++;
            }
        }
        for (int i = 0; i < 8; i++) { // 조합
            if (!visit[i]) {
                visit[i] = true;
                String name = names + member[i];
                dfs(name, visit, datas);
                visit[i] = false;
            }
        }
    }
    boolean check(String names, String[] datas) {
        for (String data : datas) {
            int position1 = names.indexOf(data.charAt(0)); // 프렌즈 포지션1
            int position2 = names.indexOf(data.charAt(2)); // 프렌즈 포지션2
            char op = data.charAt(3); // 수식
            int index = data.charAt(4) -'0'; // 간격
            if (op == '=') {
                if (!(Math.abs(position1 - position2) == index+1)) return false; 
            } else if (op == '>') {
                if (!(Math.abs(position1 - position2) > index+1)) return false;
            } else if (op == '<') {
                if (!(Math.abs(position1 - position2) < index+1)) return false;
            }
        }
        return true;
    }
}